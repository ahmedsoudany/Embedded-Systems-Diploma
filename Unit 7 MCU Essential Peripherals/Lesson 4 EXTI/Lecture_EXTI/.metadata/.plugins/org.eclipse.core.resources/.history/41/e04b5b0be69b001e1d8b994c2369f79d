/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//Learn-in-depth
//Ahmed Melik Alnasser
//Mastering Embedded System online diploma

#include "STM32F103x6.h"
#include "STM32F103C6_GPIO_Drivers.h"
#include "STM32F103C6_EXTI_Drivers.h"
#include "LCD.h"
#include "KEYPAD.h"

unsigned int IRQ_Flag = 0;

void clock_init()
{
	//IO port A clock enable
	RCC_GPIOA_CLK_EN();
	//IO port B clock enable
	RCC_GPIOB_CLK_EN();
	//IO port AFIO clock enable
	RCC_AFIO_CLK_EN();
}


void wait_ms(int time)
{
	uint32_t i,j;
	for(i = 0; i < time; i++)
		for(j = 0; i < 255; j++);
}



void Interrupt_init()
{
	EXTI_PinConfig_t EXTI_CFG;
	EXTI_CFG.EXTI_PIN = EXTI9PB9;
	EXTI_CFG.Trigger_Case = EXTI_Trigger_RISING;
	EXTI_CFG.P_IRQ_CallBack = EXTI9_Callback;
	EXTI_CFG.IRQ_EN = EXTI_IRQ_Enable;

	MCAL_EXTI_GPIO_Init(&EXTI_CFG);
}



int main(void)
{
	clock_init();
	LCD_Init();
	LCD_Clear_Screen();

	IRQ_Flag = 1;

	while(1)
	{
		if(IRQ_Flag)
		{
			LCD_Clear_Screen();
			IRQ_Flag = 0;
		}

		waits(1000);
	}
}


void EXTI9_Callback()
{

	LCD_Write_Str("IRQ EXTI9 is happened _|- ");
	IRQ_Flag = 1;
	wait_ms(1000);
}
