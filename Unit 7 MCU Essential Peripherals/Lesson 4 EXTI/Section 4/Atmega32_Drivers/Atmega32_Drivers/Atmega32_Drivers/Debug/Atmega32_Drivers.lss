
Atmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000003b2  00000426  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000436  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000468  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f4c  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007cb  00000000  00000000  000014d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007ba  00000000  00000000  00001c9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00002458  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000063d  00000000  00000000  00002640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000818  00000000  00000000  00002c7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00003495  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 c8 00 	call	0x190	; 0x190 <main>
  7a:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_lcd_kick>:
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RW,High);
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RS,Low);
	LCD_lcd_kick();
	Datadir_LCD_Port |= (0xff<<DATA_shift);
	//MCAL_GPIO_SET_PORT_DIR(LCD_Port,High);
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RW,Low);
  82:	41 e0       	ldi	r20, 0x01	; 1
  84:	63 e0       	ldi	r22, 0x03	; 3
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	9f e3       	ldi	r25, 0x3F	; 63
  90:	01 97       	sbiw	r24, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <LCD_lcd_kick+0xe>
  94:	00 c0       	rjmp	.+0      	; 0x96 <LCD_lcd_kick+0x14>
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	63 e0       	ldi	r22, 0x03	; 3
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
  a0:	08 95       	ret

000000a2 <LCD_Send_A_Character>:
	_delay_ms(50);
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,EN,High);
}

void LCD_Send_A_Character(unsigned char character)
{
  a2:	cf 93       	push	r28
  a4:	c8 2f       	mov	r28, r24
	LCD_lcd_kick();
	
	#endif
	
	#ifdef FOUR_BIT_MODE
	PORTA = (PORTA & 0x0F) | (character & 0xF0);
  a6:	8b b3       	in	r24, 0x1b	; 27
  a8:	8f 70       	andi	r24, 0x0F	; 15
  aa:	9c 2f       	mov	r25, r28
  ac:	90 7f       	andi	r25, 0xF0	; 240
  ae:	89 2b       	or	r24, r25
  b0:	8b bb       	out	0x1b, r24	; 27
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RS,High);
  b2:	40 e0       	ldi	r20, 0x00	; 0
  b4:	61 e0       	ldi	r22, 0x01	; 1
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RW,Low);
  bc:	41 e0       	ldi	r20, 0x01	; 1
  be:	62 e0       	ldi	r22, 0x02	; 2
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	LCD_lcd_kick();
  c6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_lcd_kick>
	PORTA = (PORTA & 0x0F) | (character << 4 );
  ca:	2b b3       	in	r18, 0x1b	; 27
  cc:	30 e1       	ldi	r19, 0x10	; 16
  ce:	c3 9f       	mul	r28, r19
  d0:	c0 01       	movw	r24, r0
  d2:	11 24       	eor	r1, r1
  d4:	92 2f       	mov	r25, r18
  d6:	9f 70       	andi	r25, 0x0F	; 15
  d8:	89 2b       	or	r24, r25
  da:	8b bb       	out	0x1b, r24	; 27
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RS,High);
  dc:	40 e0       	ldi	r20, 0x00	; 0
  de:	61 e0       	ldi	r22, 0x01	; 1
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RW,Low);
  e6:	41 e0       	ldi	r20, 0x01	; 1
  e8:	62 e0       	ldi	r22, 0x02	; 2
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	LCD_lcd_kick();
  f0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_lcd_kick>
	#endif
}
  f4:	cf 91       	pop	r28
  f6:	08 95       	ret

000000f8 <LCD_Send_A_String>:
void LCD_Send_A_String(uint8_t *string)
{
  f8:	0f 93       	push	r16
  fa:	1f 93       	push	r17
  fc:	cf 93       	push	r28
  fe:	df 93       	push	r29
 100:	8c 01       	movw	r16, r24
	int count = 0; //To count how much char on the line
 102:	c0 e0       	ldi	r28, 0x00	; 0
 104:	d0 e0       	ldi	r29, 0x00	; 0
	while(*string > 0)
 106:	0e c0       	rjmp	.+28     	; 0x124 <LCD_Send_A_String+0x2c>
	{
		
		count++;
 108:	21 96       	adiw	r28, 0x01	; 1
		LCD_Send_A_Character(*string++);
 10a:	0f 5f       	subi	r16, 0xFF	; 255
 10c:	1f 4f       	sbci	r17, 0xFF	; 255
 10e:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Send_A_Character>
		if(count == 16)//go to second line
 112:	c0 31       	cpi	r28, 0x10	; 16
 114:	d1 05       	cpc	r29, r1
 116:	31 f0       	breq	.+12     	; 0x124 <LCD_Send_A_String+0x2c>
		{
			LCD_GotoXY(1,0); //line 1 position 0
		}
		else if(count == 32 || count == 33)//go to second line
 118:	ce 01       	movw	r24, r28
 11a:	80 97       	sbiw	r24, 0x20	; 32
 11c:	02 97       	sbiw	r24, 0x02	; 2
 11e:	10 f4       	brcc	.+4      	; 0x124 <LCD_Send_A_String+0x2c>
		{
			LCD_clear_screen();
			LCD_GotoXY(0,0); //line 0 position 0
			count = 0;
 120:	c0 e0       	ldi	r28, 0x00	; 0
 122:	d0 e0       	ldi	r29, 0x00	; 0
	#endif
}
void LCD_Send_A_String(uint8_t *string)
{
	int count = 0; //To count how much char on the line
	while(*string > 0)
 124:	f8 01       	movw	r30, r16
 126:	80 81       	ld	r24, Z
 128:	81 11       	cpse	r24, r1
 12a:	ee cf       	rjmp	.-36     	; 0x108 <LCD_Send_A_String+0x10>
			count = 0;
		}
		
	}
	
}
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	1f 91       	pop	r17
 132:	0f 91       	pop	r16
 134:	08 95       	ret

00000136 <LCD_lcd_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 136:	8f ef       	ldi	r24, 0xFF	; 255
 138:	9f e3       	ldi	r25, 0x3F	; 63
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <LCD_lcd_init+0x4>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <LCD_lcd_init+0xa>
void LCD_lcd_init(void)
{
	_delay_ms(20);
	
	MCAL_GPIO_SET_PIN_DIR(LCD_Ctrl,EN,Output);
 140:	41 e0       	ldi	r20, 0x01	; 1
 142:	63 e0       	ldi	r22, 0x03	; 3
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	0e 94 cf 00 	call	0x19e	; 0x19e <MCAL_GPIO_SET_PIN_DIR>
	MCAL_GPIO_SET_PIN_DIR(LCD_Ctrl,RS,Output);
 14a:	41 e0       	ldi	r20, 0x01	; 1
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	0e 94 cf 00 	call	0x19e	; 0x19e <MCAL_GPIO_SET_PIN_DIR>
	MCAL_GPIO_SET_PIN_DIR(LCD_Ctrl,RW,Output);
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	62 e0       	ldi	r22, 0x02	; 2
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	0e 94 cf 00 	call	0x19e	; 0x19e <MCAL_GPIO_SET_PIN_DIR>
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,EN,Low);
 15e:	41 e0       	ldi	r20, 0x01	; 1
 160:	63 e0       	ldi	r22, 0x03	; 3
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RS,Low);
 168:	41 e0       	ldi	r20, 0x01	; 1
 16a:	61 e0       	ldi	r22, 0x01	; 1
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	MCAL_GPIO_SET_PIN_VAL(LCD_Ctrl,RW,Low);
 172:	41 e0       	ldi	r20, 0x01	; 1
 174:	62 e0       	ldi	r22, 0x02	; 2
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	0e 94 67 01 	call	0x2ce	; 0x2ce <MCAL_GPIO_SET_PIN_VAL>
	
	MCAL_GPIO_SET_PORT_DIR(Datadir_LCD_Port,Output);
 17c:	8a b3       	in	r24, 0x1a	; 26
 17e:	61 e0       	ldi	r22, 0x01	; 1
 180:	0e 94 3f 01 	call	0x27e	; 0x27e <MCAL_GPIO_SET_PORT_DIR>
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	9f e3       	ldi	r25, 0x3F	; 63
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <LCD_lcd_init+0x52>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <LCD_lcd_init+0x58>
 18e:	08 95       	ret

00000190 <main>:


int main(void)
{
  
    LCD_lcd_init();
 190:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_lcd_init>
    LCD_Send_A_String("Learn in Depth");
 194:	80 e6       	ldi	r24, 0x60	; 96
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 7c 00 	call	0xf8	; 0xf8 <LCD_Send_A_String>
 19c:	ff cf       	rjmp	.-2      	; 0x19c <main+0xc>

0000019e <MCAL_GPIO_SET_PIN_DIR>:
#include "GPIO.h"


void MCAL_GPIO_SET_PIN_DIR(GPIO_Port_t Port,PIN_No_t Pin,PIN_Dir_t Dir)
{
	if(Dir == Output)
 19e:	41 30       	cpi	r20, 0x01	; 1
 1a0:	a1 f5       	brne	.+104    	; 0x20a <MCAL_GPIO_SET_PIN_DIR+0x6c>
	{
		switch(Port)
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	89 f0       	breq	.+34     	; 0x1c8 <MCAL_GPIO_SET_PIN_DIR+0x2a>
 1a6:	28 f0       	brcs	.+10     	; 0x1b2 <MCAL_GPIO_SET_PIN_DIR+0x14>
 1a8:	82 30       	cpi	r24, 0x02	; 2
 1aa:	c9 f0       	breq	.+50     	; 0x1de <MCAL_GPIO_SET_PIN_DIR+0x40>
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	11 f1       	breq	.+68     	; 0x1f4 <MCAL_GPIO_SET_PIN_DIR+0x56>
 1b0:	08 95       	ret
		{
			case PortA:
			SETBIT(DDRA,Pin);
 1b2:	2a b3       	in	r18, 0x1a	; 26
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <MCAL_GPIO_SET_PIN_DIR+0x20>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <MCAL_GPIO_SET_PIN_DIR+0x1c>
 1c2:	82 2b       	or	r24, r18
 1c4:	8a bb       	out	0x1a, r24	; 26
			break;
 1c6:	08 95       	ret
			case PortB:
			SETBIT(DDRB,Pin);
 1c8:	27 b3       	in	r18, 0x17	; 23
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <MCAL_GPIO_SET_PIN_DIR+0x36>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <MCAL_GPIO_SET_PIN_DIR+0x32>
 1d8:	82 2b       	or	r24, r18
 1da:	87 bb       	out	0x17, r24	; 23
			break;
 1dc:	08 95       	ret
			case PortC:
			SETBIT(DDRC,Pin);
 1de:	24 b3       	in	r18, 0x14	; 20
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <MCAL_GPIO_SET_PIN_DIR+0x4c>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	6a 95       	dec	r22
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <MCAL_GPIO_SET_PIN_DIR+0x48>
 1ee:	82 2b       	or	r24, r18
 1f0:	84 bb       	out	0x14, r24	; 20
			break;
 1f2:	08 95       	ret
			case PortD:
			SETBIT(DDRD,Pin);
 1f4:	21 b3       	in	r18, 0x11	; 17
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <MCAL_GPIO_SET_PIN_DIR+0x62>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <MCAL_GPIO_SET_PIN_DIR+0x5e>
 204:	82 2b       	or	r24, r18
 206:	81 bb       	out	0x11, r24	; 17
			break;
 208:	08 95       	ret
		}
	}
	else if(Dir == Input)
 20a:	41 11       	cpse	r20, r1
 20c:	37 c0       	rjmp	.+110    	; 0x27c <MCAL_GPIO_SET_PIN_DIR+0xde>
	{
		switch(Port)
 20e:	81 30       	cpi	r24, 0x01	; 1
 210:	91 f0       	breq	.+36     	; 0x236 <MCAL_GPIO_SET_PIN_DIR+0x98>
 212:	28 f0       	brcs	.+10     	; 0x21e <MCAL_GPIO_SET_PIN_DIR+0x80>
 214:	82 30       	cpi	r24, 0x02	; 2
 216:	d9 f0       	breq	.+54     	; 0x24e <MCAL_GPIO_SET_PIN_DIR+0xb0>
 218:	83 30       	cpi	r24, 0x03	; 3
 21a:	29 f1       	breq	.+74     	; 0x266 <MCAL_GPIO_SET_PIN_DIR+0xc8>
 21c:	08 95       	ret
		{
			case PortA:
			CLRBIT(DDRA,Pin);
 21e:	2a b3       	in	r18, 0x1a	; 26
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 c0       	rjmp	.+4      	; 0x22a <MCAL_GPIO_SET_PIN_DIR+0x8c>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	6a 95       	dec	r22
 22c:	e2 f7       	brpl	.-8      	; 0x226 <MCAL_GPIO_SET_PIN_DIR+0x88>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	8a bb       	out	0x1a, r24	; 26
			break;
 234:	08 95       	ret
			case PortB:
			CLRBIT(DDRB,Pin);
 236:	27 b3       	in	r18, 0x17	; 23
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <MCAL_GPIO_SET_PIN_DIR+0xa4>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <MCAL_GPIO_SET_PIN_DIR+0xa0>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	87 bb       	out	0x17, r24	; 23
			break;
 24c:	08 95       	ret
			case PortC:
			CLRBIT(DDRC,Pin);
 24e:	24 b3       	in	r18, 0x14	; 20
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <MCAL_GPIO_SET_PIN_DIR+0xbc>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <MCAL_GPIO_SET_PIN_DIR+0xb8>
 25e:	80 95       	com	r24
 260:	82 23       	and	r24, r18
 262:	84 bb       	out	0x14, r24	; 20
			break;
 264:	08 95       	ret
			case PortD:
			CLRBIT(DDRD,Pin);
 266:	21 b3       	in	r18, 0x11	; 17
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <MCAL_GPIO_SET_PIN_DIR+0xd4>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <MCAL_GPIO_SET_PIN_DIR+0xd0>
 276:	80 95       	com	r24
 278:	82 23       	and	r24, r18
 27a:	81 bb       	out	0x11, r24	; 17
 27c:	08 95       	ret

0000027e <MCAL_GPIO_SET_PORT_DIR>:
		
	}
}
void MCAL_GPIO_SET_PORT_DIR(GPIO_Port_t Port,PIN_Dir_t Dir)
{
	if(Dir == Output)
 27e:	61 30       	cpi	r22, 0x01	; 1
 280:	a1 f4       	brne	.+40     	; 0x2aa <MCAL_GPIO_SET_PORT_DIR+0x2c>
	{
		switch(Port)
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	49 f0       	breq	.+18     	; 0x298 <MCAL_GPIO_SET_PORT_DIR+0x1a>
 286:	28 f0       	brcs	.+10     	; 0x292 <MCAL_GPIO_SET_PORT_DIR+0x14>
 288:	82 30       	cpi	r24, 0x02	; 2
 28a:	49 f0       	breq	.+18     	; 0x29e <MCAL_GPIO_SET_PORT_DIR+0x20>
 28c:	83 30       	cpi	r24, 0x03	; 3
 28e:	51 f0       	breq	.+20     	; 0x2a4 <MCAL_GPIO_SET_PORT_DIR+0x26>
 290:	08 95       	ret
		{
			case PortA:
			DDRA = 0xFF;
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	8a bb       	out	0x1a, r24	; 26
			break;
 296:	08 95       	ret
			case PortB:
			DDRB = 0xFF;
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	87 bb       	out	0x17, r24	; 23
			break;
 29c:	08 95       	ret
			case PortC:
			DDRC = 0xFF;
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	84 bb       	out	0x14, r24	; 20
			break;
 2a2:	08 95       	ret
			case PortD:
			DDRD = 0xFF;
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	81 bb       	out	0x11, r24	; 17
			break;
 2a8:	08 95       	ret
		}
	}
	else if(Dir == Input)
 2aa:	61 11       	cpse	r22, r1
 2ac:	0f c0       	rjmp	.+30     	; 0x2cc <MCAL_GPIO_SET_PORT_DIR+0x4e>
	{
		switch(Port)
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	41 f0       	breq	.+16     	; 0x2c2 <MCAL_GPIO_SET_PORT_DIR+0x44>
 2b2:	28 f0       	brcs	.+10     	; 0x2be <MCAL_GPIO_SET_PORT_DIR+0x40>
 2b4:	82 30       	cpi	r24, 0x02	; 2
 2b6:	39 f0       	breq	.+14     	; 0x2c6 <MCAL_GPIO_SET_PORT_DIR+0x48>
 2b8:	83 30       	cpi	r24, 0x03	; 3
 2ba:	39 f0       	breq	.+14     	; 0x2ca <MCAL_GPIO_SET_PORT_DIR+0x4c>
 2bc:	08 95       	ret
		{
			case PortA:
			DDRA = 0x00;
 2be:	1a ba       	out	0x1a, r1	; 26
			break;
 2c0:	08 95       	ret
			case PortB:
			DDRB = 0x00;
 2c2:	17 ba       	out	0x17, r1	; 23
			break;
 2c4:	08 95       	ret
			case PortC:
			DDRC = 0x00;
 2c6:	14 ba       	out	0x14, r1	; 20
			break;
 2c8:	08 95       	ret
			case PortD:
			DDRD = 0x00;
 2ca:	11 ba       	out	0x11, r1	; 17
 2cc:	08 95       	ret

000002ce <MCAL_GPIO_SET_PIN_VAL>:
		}
	}
}
void MCAL_GPIO_SET_PIN_VAL(GPIO_Port_t Port,PIN_No_t Pin,PIN_Value_t Val)
{
	if(Val == High)
 2ce:	41 11       	cpse	r20, r1
 2d0:	34 c0       	rjmp	.+104    	; 0x33a <MCAL_GPIO_SET_PIN_VAL+0x6c>
	{
		switch(Port)
 2d2:	81 30       	cpi	r24, 0x01	; 1
 2d4:	89 f0       	breq	.+34     	; 0x2f8 <MCAL_GPIO_SET_PIN_VAL+0x2a>
 2d6:	28 f0       	brcs	.+10     	; 0x2e2 <MCAL_GPIO_SET_PIN_VAL+0x14>
 2d8:	82 30       	cpi	r24, 0x02	; 2
 2da:	c9 f0       	breq	.+50     	; 0x30e <MCAL_GPIO_SET_PIN_VAL+0x40>
 2dc:	83 30       	cpi	r24, 0x03	; 3
 2de:	11 f1       	breq	.+68     	; 0x324 <MCAL_GPIO_SET_PIN_VAL+0x56>
 2e0:	08 95       	ret
		{
			case PortA:
			SETBIT(PORTA,Pin);
 2e2:	2b b3       	in	r18, 0x1b	; 27
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <MCAL_GPIO_SET_PIN_VAL+0x20>
 2ea:	88 0f       	add	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	6a 95       	dec	r22
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <MCAL_GPIO_SET_PIN_VAL+0x1c>
 2f2:	82 2b       	or	r24, r18
 2f4:	8b bb       	out	0x1b, r24	; 27
			break;
 2f6:	08 95       	ret
			case PortB:
			SETBIT(PORTB,Pin);
 2f8:	28 b3       	in	r18, 0x18	; 24
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <MCAL_GPIO_SET_PIN_VAL+0x36>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	6a 95       	dec	r22
 306:	e2 f7       	brpl	.-8      	; 0x300 <MCAL_GPIO_SET_PIN_VAL+0x32>
 308:	82 2b       	or	r24, r18
 30a:	88 bb       	out	0x18, r24	; 24
			break;
 30c:	08 95       	ret
			case PortC:
			SETBIT(PORTC,Pin);
 30e:	25 b3       	in	r18, 0x15	; 21
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 c0       	rjmp	.+4      	; 0x31a <MCAL_GPIO_SET_PIN_VAL+0x4c>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	6a 95       	dec	r22
 31c:	e2 f7       	brpl	.-8      	; 0x316 <MCAL_GPIO_SET_PIN_VAL+0x48>
 31e:	82 2b       	or	r24, r18
 320:	85 bb       	out	0x15, r24	; 21
			break;
 322:	08 95       	ret
			case PortD:
			SETBIT(PORTD,Pin);
 324:	22 b3       	in	r18, 0x12	; 18
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 c0       	rjmp	.+4      	; 0x330 <MCAL_GPIO_SET_PIN_VAL+0x62>
 32c:	88 0f       	add	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	6a 95       	dec	r22
 332:	e2 f7       	brpl	.-8      	; 0x32c <MCAL_GPIO_SET_PIN_VAL+0x5e>
 334:	82 2b       	or	r24, r18
 336:	82 bb       	out	0x12, r24	; 18
			break;
 338:	08 95       	ret
		}
	}
	else if(Val == Low)
 33a:	41 30       	cpi	r20, 0x01	; 1
 33c:	b9 f5       	brne	.+110    	; 0x3ac <MCAL_GPIO_SET_PIN_VAL+0xde>
	{
		switch(Port)
 33e:	81 30       	cpi	r24, 0x01	; 1
 340:	91 f0       	breq	.+36     	; 0x366 <MCAL_GPIO_SET_PIN_VAL+0x98>
 342:	28 f0       	brcs	.+10     	; 0x34e <MCAL_GPIO_SET_PIN_VAL+0x80>
 344:	82 30       	cpi	r24, 0x02	; 2
 346:	d9 f0       	breq	.+54     	; 0x37e <MCAL_GPIO_SET_PIN_VAL+0xb0>
 348:	83 30       	cpi	r24, 0x03	; 3
 34a:	29 f1       	breq	.+74     	; 0x396 <MCAL_GPIO_SET_PIN_VAL+0xc8>
 34c:	08 95       	ret
		{
			case PortA:
			CLRBIT(PORTA,Pin);
 34e:	2b b3       	in	r18, 0x1b	; 27
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 c0       	rjmp	.+4      	; 0x35a <MCAL_GPIO_SET_PIN_VAL+0x8c>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	6a 95       	dec	r22
 35c:	e2 f7       	brpl	.-8      	; 0x356 <MCAL_GPIO_SET_PIN_VAL+0x88>
 35e:	80 95       	com	r24
 360:	82 23       	and	r24, r18
 362:	8b bb       	out	0x1b, r24	; 27
			break;
 364:	08 95       	ret
			case PortB:
			CLRBIT(PORTB,Pin);
 366:	28 b3       	in	r18, 0x18	; 24
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	02 c0       	rjmp	.+4      	; 0x372 <MCAL_GPIO_SET_PIN_VAL+0xa4>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	6a 95       	dec	r22
 374:	e2 f7       	brpl	.-8      	; 0x36e <MCAL_GPIO_SET_PIN_VAL+0xa0>
 376:	80 95       	com	r24
 378:	82 23       	and	r24, r18
 37a:	88 bb       	out	0x18, r24	; 24
			break;
 37c:	08 95       	ret
			case PortC:
			CLRBIT(PORTC,Pin);
 37e:	25 b3       	in	r18, 0x15	; 21
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	02 c0       	rjmp	.+4      	; 0x38a <MCAL_GPIO_SET_PIN_VAL+0xbc>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	6a 95       	dec	r22
 38c:	e2 f7       	brpl	.-8      	; 0x386 <MCAL_GPIO_SET_PIN_VAL+0xb8>
 38e:	80 95       	com	r24
 390:	82 23       	and	r24, r18
 392:	85 bb       	out	0x15, r24	; 21
			break;
 394:	08 95       	ret
			case PortD:
			CLRBIT(PORTD,Pin);
 396:	22 b3       	in	r18, 0x12	; 18
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <MCAL_GPIO_SET_PIN_VAL+0xd4>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	6a 95       	dec	r22
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <MCAL_GPIO_SET_PIN_VAL+0xd0>
 3a6:	80 95       	com	r24
 3a8:	82 23       	and	r24, r18
 3aa:	82 bb       	out	0x12, r24	; 18
 3ac:	08 95       	ret

000003ae <_exit>:
 3ae:	f8 94       	cli

000003b0 <__stop_program>:
 3b0:	ff cf       	rjmp	.-2      	; 0x3b0 <__stop_program>
