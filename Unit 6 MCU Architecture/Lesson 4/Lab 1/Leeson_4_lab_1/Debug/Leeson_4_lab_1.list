
Leeson_4_lab_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ec  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800031c  08000324  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800031c  0800031c  00010324  2**0
                  CONTENTS
  4 .ARM          00000000  0800031c  0800031c  00010324  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800031c  08000324  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800031c  0800031c  0001031c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000320  08000320  00010320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000324  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000324  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010324  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000bd  00000000  00000000  0001034d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000007c  00000000  00000000  0001040a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000070  00000000  00000000  00010488  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000058  00000000  00000000  000104f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000abf  00000000  00000000  00010550  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000012a  00000000  00000000  0001100f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002fbc  00000000  00000000  00011139  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000140f5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000f8  00000000  00000000  00014170  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000304 	.word	0x08000304

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000304 	.word	0x08000304

08000170 <GPIO_PIN13_output_init>:
#define RCC_APB2ENR *(volatile unsigned int *)(RCC_Base + 0x18)
//Addresses of the IRQ
#define NVIC_ISER0 *(volatile unsigned int *)(0xE000E100)

void GPIO_PIN13_output_init()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	GPIOA_CRH &= 0xFF0FFFFF;
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <GPIO_PIN13_output_init+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a06      	ldr	r2, [pc, #24]	; (8000194 <GPIO_PIN13_output_init+0x24>)
 800017a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800017e:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= 0x00200000;
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <GPIO_PIN13_output_init+0x24>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a03      	ldr	r2, [pc, #12]	; (8000194 <GPIO_PIN13_output_init+0x24>)
 8000186:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800018a:	6013      	str	r3, [r2, #0]


}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40010804 	.word	0x40010804

08000198 <GPIO_PINO_input_init>:
void GPIO_PINO_input_init()
{
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	GPIOA_CRL |= (1<<2);
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <GPIO_PINO_input_init+0x18>)
 800019e:	681b      	ldr	r3, [r3, #0]
 80001a0:	4a03      	ldr	r2, [pc, #12]	; (80001b0 <GPIO_PINO_input_init+0x18>)
 80001a2:	f043 0304 	orr.w	r3, r3, #4
 80001a6:	6013      	str	r3, [r2, #0]
}
 80001a8:	bf00      	nop
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	40010800 	.word	0x40010800

080001b4 <clock_init>:
void clock_init()
{
 80001b4:	b480      	push	{r7}
 80001b6:	af00      	add	r7, sp, #0
	//IO port A clock enable
	RCC_APB2ENR |= (1<<2);
 80001b8:	4b09      	ldr	r3, [pc, #36]	; (80001e0 <clock_init+0x2c>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	4a08      	ldr	r2, [pc, #32]	; (80001e0 <clock_init+0x2c>)
 80001be:	f043 0304 	orr.w	r3, r3, #4
 80001c2:	6013      	str	r3, [r2, #0]

	//Alternate function IO clock enable
	RCC_APB2ENR |= (1<<0);
 80001c4:	4b06      	ldr	r3, [pc, #24]	; (80001e0 <clock_init+0x2c>)
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	4a05      	ldr	r2, [pc, #20]	; (80001e0 <clock_init+0x2c>)
 80001ca:	f043 0301 	orr.w	r3, r3, #1
 80001ce:	6013      	str	r3, [r2, #0]

	//to select the source input for EXTI0 external interrupt = PA0
	AFIO_EXTICR1 = 0x0; //Select PORTA for EXTI0
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <clock_init+0x30>)
 80001d2:	2200      	movs	r2, #0
 80001d4:	601a      	str	r2, [r3, #0]
}
 80001d6:	bf00      	nop
 80001d8:	46bd      	mov	sp, r7
 80001da:	bc80      	pop	{r7}
 80001dc:	4770      	bx	lr
 80001de:	bf00      	nop
 80001e0:	40021018 	.word	0x40021018
 80001e4:	40010008 	.word	0x40010008

080001e8 <EXTI_Init>:

void EXTI_Init(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	//3- Configure the enable and mask bits that control the NVIC IRQ channel mapped to the
	//   External Interrupt Controller (EXTI)


		//Interrupt request from Line x is masked
	EXTI_IMR |= (1<<0); //Enable Mask EXTI0
 80001ec:	4b0a      	ldr	r3, [pc, #40]	; (8000218 <EXTI_Init+0x30>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a09      	ldr	r2, [pc, #36]	; (8000218 <EXTI_Init+0x30>)
 80001f2:	f043 0301 	orr.w	r3, r3, #1
 80001f6:	6013      	str	r3, [r2, #0]
	//to Rising trigger event configuration bit of line 0
	EXTI_RTSR |= (1<<0); //Enable Rising trigger Enabled
 80001f8:	4b08      	ldr	r3, [pc, #32]	; (800021c <EXTI_Init+0x34>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	4a07      	ldr	r2, [pc, #28]	; (800021c <EXTI_Init+0x34>)
 80001fe:	f043 0301 	orr.w	r3, r3, #1
 8000202:	6013      	str	r3, [r2, #0]


	NVIC_ISER0 |= (1<<6); //Enable NVIC IRQ 6 (EXTI0)
 8000204:	4b06      	ldr	r3, [pc, #24]	; (8000220 <EXTI_Init+0x38>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a05      	ldr	r2, [pc, #20]	; (8000220 <EXTI_Init+0x38>)
 800020a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800020e:	6013      	str	r3, [r2, #0]
}
 8000210:	bf00      	nop
 8000212:	46bd      	mov	sp, r7
 8000214:	bc80      	pop	{r7}
 8000216:	4770      	bx	lr
 8000218:	40010400 	.word	0x40010400
 800021c:	40010408 	.word	0x40010408
 8000220:	e000e100 	.word	0xe000e100

08000224 <main>:
int main(void)
{
 8000224:	b580      	push	{r7, lr}
 8000226:	af00      	add	r7, sp, #0

	//Inialization of modules
	clock_init();
 8000228:	f7ff ffc4 	bl	80001b4 <clock_init>
	GPIO_PINO_input_init();
 800022c:	f7ff ffb4 	bl	8000198 <GPIO_PINO_input_init>
	GPIO_PIN13_output_init();
 8000230:	f7ff ff9e 	bl	8000170 <GPIO_PIN13_output_init>
	EXTI_Init();
 8000234:	f7ff ffd8 	bl	80001e8 <EXTI_Init>

	while(1);
 8000238:	e7fe      	b.n	8000238 <main+0x14>
	...

0800023c <EXTI0_IRQHandler>:

}

void EXTI0_IRQHandler()
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	//Toggle led
	GPIOA_ODR ^= (1<<13);
 8000240:	4b07      	ldr	r3, [pc, #28]	; (8000260 <EXTI0_IRQHandler+0x24>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a06      	ldr	r2, [pc, #24]	; (8000260 <EXTI0_IRQHandler+0x24>)
 8000246:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 800024a:	6013      	str	r3, [r2, #0]
	//Clear pending request
	EXTI_PR |= (1<<0);
 800024c:	4b05      	ldr	r3, [pc, #20]	; (8000264 <EXTI0_IRQHandler+0x28>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a04      	ldr	r2, [pc, #16]	; (8000264 <EXTI0_IRQHandler+0x28>)
 8000252:	f043 0301 	orr.w	r3, r3, #1
 8000256:	6013      	str	r3, [r2, #0]

}
 8000258:	bf00      	nop
 800025a:	46bd      	mov	sp, r7
 800025c:	bc80      	pop	{r7}
 800025e:	4770      	bx	lr
 8000260:	4001080c 	.word	0x4001080c
 8000264:	40010414 	.word	0x40010414

08000268 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000268:	480d      	ldr	r0, [pc, #52]	; (80002a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800026c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000270:	480c      	ldr	r0, [pc, #48]	; (80002a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000272:	490d      	ldr	r1, [pc, #52]	; (80002a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000274:	4a0d      	ldr	r2, [pc, #52]	; (80002ac <LoopForever+0xe>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000278:	e002      	b.n	8000280 <LoopCopyDataInit>

0800027a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800027c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027e:	3304      	adds	r3, #4

08000280 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000280:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000282:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000284:	d3f9      	bcc.n	800027a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000286:	4a0a      	ldr	r2, [pc, #40]	; (80002b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000288:	4c0a      	ldr	r4, [pc, #40]	; (80002b4 <LoopForever+0x16>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800028c:	e001      	b.n	8000292 <LoopFillZerobss>

0800028e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000290:	3204      	adds	r2, #4

08000292 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000292:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000294:	d3fb      	bcc.n	800028e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000296:	f000 f811 	bl	80002bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029a:	f7ff ffc3 	bl	8000224 <main>

0800029e <LoopForever>:

LoopForever:
    b LoopForever
 800029e:	e7fe      	b.n	800029e <LoopForever>
  ldr   r0, =_estack
 80002a0:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80002a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ac:	08000324 	.word	0x08000324
  ldr r2, =_sbss
 80002b0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b4:	2000001c 	.word	0x2000001c

080002b8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b8:	e7fe      	b.n	80002b8 <ADC1_2_IRQHandler>
	...

080002bc <__libc_init_array>:
 80002bc:	b570      	push	{r4, r5, r6, lr}
 80002be:	2500      	movs	r5, #0
 80002c0:	4e0c      	ldr	r6, [pc, #48]	; (80002f4 <__libc_init_array+0x38>)
 80002c2:	4c0d      	ldr	r4, [pc, #52]	; (80002f8 <__libc_init_array+0x3c>)
 80002c4:	1ba4      	subs	r4, r4, r6
 80002c6:	10a4      	asrs	r4, r4, #2
 80002c8:	42a5      	cmp	r5, r4
 80002ca:	d109      	bne.n	80002e0 <__libc_init_array+0x24>
 80002cc:	f000 f81a 	bl	8000304 <_init>
 80002d0:	2500      	movs	r5, #0
 80002d2:	4e0a      	ldr	r6, [pc, #40]	; (80002fc <__libc_init_array+0x40>)
 80002d4:	4c0a      	ldr	r4, [pc, #40]	; (8000300 <__libc_init_array+0x44>)
 80002d6:	1ba4      	subs	r4, r4, r6
 80002d8:	10a4      	asrs	r4, r4, #2
 80002da:	42a5      	cmp	r5, r4
 80002dc:	d105      	bne.n	80002ea <__libc_init_array+0x2e>
 80002de:	bd70      	pop	{r4, r5, r6, pc}
 80002e0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002e4:	4798      	blx	r3
 80002e6:	3501      	adds	r5, #1
 80002e8:	e7ee      	b.n	80002c8 <__libc_init_array+0xc>
 80002ea:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002ee:	4798      	blx	r3
 80002f0:	3501      	adds	r5, #1
 80002f2:	e7f2      	b.n	80002da <__libc_init_array+0x1e>
 80002f4:	0800031c 	.word	0x0800031c
 80002f8:	0800031c 	.word	0x0800031c
 80002fc:	0800031c 	.word	0x0800031c
 8000300:	08000320 	.word	0x08000320

08000304 <_init>:
 8000304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000306:	bf00      	nop
 8000308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800030a:	bc08      	pop	{r3}
 800030c:	469e      	mov	lr, r3
 800030e:	4770      	bx	lr

08000310 <_fini>:
 8000310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000312:	bf00      	nop
 8000314:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000316:	bc08      	pop	{r3}
 8000318:	469e      	mov	lr, r3
 800031a:	4770      	bx	lr
